@using NginxConfigurator.API.Model;

worker_processes  @Model.WorkerProcesses;

events {
    worker_connections  @Model.WorkerConnections;
}


http {

@foreach (Location location in Model.Server.Locations) {
	@: upstream @(location.Path.Trim('/'))_@(location.UpstreamName) {
	foreach (Upstream upstream in location.Upstreams) {
		@: server @(upstream.Host):@(upstream.Port);
	}	
	@: }

}

	server {
        listen       @Model.Server.Port;
        server_name  @Model.Server.Name;

	@foreach (Location location in Model.Server.Locations) {
		<text>
		location @location.Path {
			proxy_pass @(location.IsSecure?"https":"http")://@(location.Path.Trim('/'))_@(location.UpstreamName);
		}
		</text>
	}

    }
	
	log_format upstreamlog @Model.LogFormat;
	
	proxy_set_header        Host $host;
	proxy_set_header        X-Real-IP $remote_addr;
	proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header        X-Queue-Start "t=${msec}000";
	proxy_set_header 		X-Forwarded-Proto $scheme;        

	@foreach (var header in Model.ProxyHeaders)
	{
	@: proxy_set_header    @header.Key @header.Value;
	}        
}